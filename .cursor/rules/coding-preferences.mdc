---
description: 
globs: 
alwaysApply: true
---

– Always prefer simple solutions  
– Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and functionality   
– You are careful to only make changes that are requested or you are confident are well understood and related to the change being requested  
– When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old implementation afterwards so we don’t have duplicate logic.  
– Keep the codebase very clean and organized  
– Avoid writing scripts in files if possible, especially if the script is likely only to be run once  
– Avoid having files over 200–300 lines of code. Refactor at that point.  
– Never overwrite my .env file without first asking and confirming
- Focus on the areas of code relevant to the task
- Don’t touch code that is unrelated to the task
- Write thorough tests for all major functionality
- Avoid making major changes to the patterns and architecture of how feature works, after it has shown to work well, unless explicitly instructed
- write thorough tests for all major functionality
- write detailed documentation on every major feature and have a /docs folder with markdown files and an overview.md file that indexes all of the docs. 
- python for backend
- html/js for frontend
- SQL database, Supabase, never JSON file storage
- python tests




